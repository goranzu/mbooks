// Update the VARIANT arg in docker-compose.yml to pick a Node.js version: 10, 12, 14 
{
	"name": "Node.js & PostgreSQL",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspace",

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash",
		"sqltools.connections": [{
			"name": "Container database",
			"driver": "PostgreSQL",
			"previewLimit": 50,
			"server": "localhost",
			"port": 5432,
			"database": "postgres",
			"username": "postgres",
			"password": "postgres"
		}]
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"dbaeumer.vscode-eslint",
		"mtxr.sqltools",
		"mtxr.sqltools-driver-pg",
		"coenraads.bracket-pair-colorizer",
		"mikestead.dotenv",
		"xabikos.javascriptsnippets",
		"andys8.jest-snippets",
		"wayou.vscode-todo-highlight",
		"editorconfig.editorconfig",
		"waderyan.gitblame",
		"donjayamanne.githistory",
		"christian-kohler.npm-intellisense",
		"ckolkman.vscode-postgres",
		"esbenp.prettier-vscode",
		"visualstudioexptteam.vscodeintellicode"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [3000, 5432],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "yarn install",

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "node"
}
